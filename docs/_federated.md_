### Federated Computation with Network Aggregator

#### 1. Preparation Stage:
   
- **Vector Standardization**: Ensure all hospitals use a standardized vector format.
- **Privacy Protocols**: Set up differential privacy mechanisms or encryption protocols.
- **Threshold Agreement**: Establish a common threshold for the Hamming distance for matches.

#### 2. Query Initiation:
   
- The querying hospital prepares a vector representation of the individual or set of individuals.
- The vector is processed using the agreed-upon privacy protocols.

#### 3. Aggregator Mediation:
   
- The querying hospital sends the processed vector to the network aggregator.
- The network aggregator distributes the query to all hospitals in the federated network.

#### 4. Local Computation:

- Each receiving hospital computes the Hamming distance against its local patient vectors.
- The computation is done entirely within the local environment of each hospital.

#### 5. Thresholding:

- Each hospital applies the agreed-upon thresholding to identify vectors that are considered a "match."

#### 6. Response to Aggregator:

- Each hospital sends its response (list of matching vectors, counts, etc.) back to the network aggregator.

#### 7. Aggregation:

- The network aggregator collects all the responses, processes them, and sends the aggregated result to the querying hospital.

#### 8. Post-Processing:

- The querying hospital undertakes further analysis, potentially reaching out to specific hospitals for more information based on the aggregated results, and decides on subsequent actions.

!!! Abstract "How could I implement Pheno-Ranker algorithm in a federated network?"

    The current implementation of Pheno-Ranker performs all calculations from scratch each time, as it's designed for local operation. To adapt the algorithm for use across multiple hospitals without directly sharing clinical data, one suggestion would be to:

    1. Preparation Stage:
    * Vector Standardization: Ensure all hospitals use a standardized vector format. This could be based on the union (or intersection) of properties from all participating hospitals.
    * Privacy Protocols: Set up differential privacy mechanisms and possibly encryption protocols so that when data is queried, individual privacy is maintained.
    * Threshold Agreement: Establish a common threshold for the Hamming distance, below which results will be considered a match.
    * Store the vectors for each patient in a **database**.
          ```json
          "id_1": "1101010101010...n",
          "id_2": "0101010101000...n"
          ```
    2.  Use a **Pheno-Ranker Aggregator** to build a _global vector_ periodically.
    3.  **Re-build** the vector database on each site periodically.
    4.  Perform **inter-hospital queries** by sending the vector to each site database (similar to [Matchmaker Exchange](https://www.matchmakerexchange.org/)).
    5.  Query Initiation:
    * The querying hospital prepares a vector representation of the individual or set of individuals it wants to query against the network.
    * The vector is processed using any agreed-upon privacy protocols (like adding differential privacy noise or encrypting the query).


    ```mermaid
    %%{init: {'theme':'neutral'}}%%
    graph TD
      subgraph "Hospital A"
      A[Pheno-Ranker]--> B[Global Vector A]
      end

      subgraph "Hospital B"
      C[Pheno-Ranker] --> D[Global Vector B]
      end

      subgraph "Hospital C"
      E[Pheno-Ranker] --> F[Global Vector C]
      end

      subgraph "Network Aggregator"
      G[Global Vector A+B+C]
      end

      B --> G
      D --> G
      F --> G

      style A fill: #6495ED, stroke: #6495ED
      style B fill: #6495ED, stroke: #6495ED
      style C fill: #AFEEEE, stroke: #AFEEEE
      style D fill: #AFEEEE, stroke: #AFEEEE
      style E fill: #3CB371, stroke: #3CB371
      style F fill: #3CB371, stroke: #3CB371
      style G fill: #FFFF33, stroke: #FFFF33

    ```

    ```mermaid
    %%{init: {'theme':'neutral'}}%%
    graph LR
      A[Querying Hospital] --> B[Prepare Vector]
      B --> C[Apply Privacy Protocols]
      C --> D[Send Query to Aggregator]
      
      AGG[Network Aggregator] --> E1[Receiving Hospital 1]
      AGG --> E2[Receiving Hospital 2]
      AGG --> En[Receiving Hospital n]
      
      E1 --> F1[Compute Hamming Distance]
      E2 --> F2[Compute Hamming Distance]
      En --> Fn[Compute Hamming Distance]
      
      F1 --> G1[Apply Threshold]
      F2 --> G2[Apply Threshold]
      Fn --> Gn[Apply Threshold]
      
      G1 --> H1[Prepare Response]
      G2 --> H2[Prepare Response]
      Gn --> Hn[Prepare Response]
      
      H1 --> AGG
      H2 --> AGG
      Hn --> AGG
      
      AGG --> I[Aggregate Responses at Querying Hospital]
      I --> J[Post-Processing & Analysis]
      
      style A fill:#f9d77e,stroke:#333,stroke-width:2px
      style AGG fill:#8fd4aa,stroke:#333,stroke-width:2px
      style E1 fill:#f9d77e,stroke:#333,stroke-width:2px
      style E2 fill:#f9d77e,stroke:#333,stroke-width:2px
      style En fill:#f9d77e,stroke:#333,stroke-width:2px
    ```
    <figcaption>Pheno-Ranker algorithm in a federated network</figcaption>
